#include "teacherview.h"
#include "markdialog.h"
#include "datastore.h"
#include <QVBoxLayout>
#include <QHBoxLayout>
#include <QLabel>
#include <QListWidget>
#include <QMessageBox>
#include <QPushButton>
#include <QDate>
#include <QFrame>
#include <QTableWidget>
#include <QTableWidgetItem>
#include <QHeaderView>
#include <QSplitter>
TeacherView::TeacherView(const QString &username, QWidget *parent) : QWidget(parent), username(username) {
    setWindowTitle(QString("üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å: %1").arg(username));
    resize(1200, 800);
    setMinimumSize(1000, 700);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏
    setStyleSheet(
        "QWidget { background-color: #2b2b2b; color: white; } "
        "QListWidget { background-color: #3c3c3c; border: 1px solid #555; border-radius: 5px; } "
        "QListWidget::item { padding: 10px; border-bottom: 1px solid #555; } "
        "QListWidget::item:selected { background-color: #667eea; } "
        "QListWidget::item:hover { background-color: #4a4a4a; } "
        "QTableWidget { background-color: #3c3c3c; gridline-color: #555; } "
        "QTableWidget::item { padding: 8px; border-bottom: 1px solid #555; } "
        "QTableWidget::item:selected { background-color: #667eea; } "
        "QHeaderView::section { background-color: #4a4a4a; color: white; padding: 10px; border: none; } "
        "QPushButton { background-color: #667eea; color: white; border: none; padding: 10px 20px; border-radius: 5px; font-weight: bold; } "
        "QPushButton:hover { background-color: #5a6fd8; } "
        "QPushButton:pressed { background-color: #4c63d2; } "
        "QPushButton#gradeBtn { background-color: #4CAF50; } "
        "QPushButton#gradeBtn:hover { background-color: #45a049; } "
    );

    QVBoxLayout *mainLayout = new QVBoxLayout(this);
    mainLayout->setSpacing(20);
    mainLayout->setContentsMargins(20, 20, 20, 20);

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    QFrame *headerFrame = new QFrame(this);
    headerFrame->setStyleSheet("QFrame { background: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #667eea, stop:1 #764ba2); border-radius: 10px; padding: 15px; }");
    
    QHBoxLayout *headerLayout = new QHBoxLayout(headerFrame);
    QLabel *userLbl = new QLabel(QString("üë®‚Äçüè´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %1!").arg(username), this);
    userLbl->setStyleSheet("QLabel { color: white; font-size: 24px; font-weight: bold; }");
    headerLayout->addWidget(userLbl);
    headerLayout->addStretch();
    
    QLabel *dateLabel = new QLabel(QDate::currentDate().toString("dd.MM.yyyy"), this);
    dateLabel->setStyleSheet("QLabel { color: rgba(255, 255, 255, 0.8); font-size: 16px; }");
    headerLayout->addWidget(dateLabel);
    
    mainLayout->addWidget(headerFrame);

    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    QSplitter *mainSplitter = new QSplitter(Qt::Horizontal, this);
    
    // –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –∫–ª–∞—Å—Å—ã –∏ —Å—Ç—É–¥–µ–Ω—Ç—ã
    QWidget *leftPanel = new QWidget();
    QVBoxLayout *leftLayout = new QVBoxLayout(leftPanel);
    
    QLabel *classesLabel = new QLabel("üìö –ö–ª–∞—Å—Å—ã:", this);
    classesLabel->setStyleSheet("QLabel { font-size: 16px; font-weight: bold; margin: 10px 0; }");
    leftLayout->addWidget(classesLabel);
    
    classList = new QListWidget(this);
    classList->addItem("1A");
    classList->addItem("1B");
    classList->addItem("2A");
    classList->addItem("2B");
    classList->addItem("3A");
    classList->addItem("3B");
    leftLayout->addWidget(classList);
    
    QLabel *studentsLabel = new QLabel("üë• –°—Ç—É–¥–µ–Ω—Ç—ã:", this);
    studentsLabel->setStyleSheet("QLabel { font-size: 16px; font-weight: bold; margin: 10px 0; }");
    leftLayout->addWidget(studentsLabel);
    
    studentList = new QListWidget(this);
    studentList->addItem("–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤");
    leftLayout->addWidget(studentList);
    
    QPushButton *gradeBtn = new QPushButton("üìù –ü–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É", this);
    gradeBtn->setObjectName("gradeBtn");
    gradeBtn->setEnabled(false);
    leftLayout->addWidget(gradeBtn);
    
    mainSplitter->addWidget(leftPanel);
    
    // –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ç–∞–±–ª–∏—Ü–∞ –æ—Ü–µ–Ω–æ–∫
    QWidget *rightPanel = new QWidget();
    QVBoxLayout *rightLayout = new QVBoxLayout(rightPanel);
    
    QLabel *gradesLabel = new QLabel("üìä –û—Ü–µ–Ω–∫–∏ –∫–ª–∞—Å—Å–∞:", this);
    gradesLabel->setStyleSheet("QLabel { font-size: 16px; font-weight: bold; margin: 10px 0; }");
    rightLayout->addWidget(gradesLabel);
    
    gradesTable = new QTableWidget(0, 5, this);
    gradesTable->setHorizontalHeaderLabels(QStringList() << "–°—Ç—É–¥–µ–Ω—Ç" << "–ü—Ä–µ–¥–º–µ—Ç" << "–û—Ü–µ–Ω–∫–∞" << "–î–∞—Ç–∞" << "–î–µ–π—Å—Ç–≤–∏—è");
    gradesTable->verticalHeader()->setVisible(false);
    gradesTable->horizontalHeader()->setStretchLastSection(true);
    gradesTable->setAlternatingRowColors(true);
    gradesTable->setSelectionBehavior(QAbstractItemView::SelectRows);
    rightLayout->addWidget(gradesTable);
    
    mainSplitter->addWidget(rightPanel);
    mainSplitter->setSizes({400, 800});
    
    mainLayout->addWidget(mainSplitter);

    // –ö–Ω–æ–ø–∫–∏
    QHBoxLayout *buttonsLayout = new QHBoxLayout();
    logoutBtn = new QPushButton("üö™ –í—ã–π—Ç–∏", this);
    buttonsLayout->addStretch();
    buttonsLayout->addWidget(logoutBtn);
    mainLayout->addLayout(buttonsLayout);

    connect(classList, &QListWidget::itemClicked, this, &TeacherView::onClassSelected);
    connect(studentList, &QListWidget::itemClicked, this, &TeacherView::onStudentClicked);
    connect(gradeBtn, &QPushButton::clicked, this, &TeacherView::onStudentClicked);
    connect(logoutBtn, &QPushButton::clicked, this, &TeacherView::onLogout);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–ª–æ—Ç–∞—Ö
    this->gradeBtn = gradeBtn;
}

void TeacherView::onClassSelected() {
    QString cls = classList->currentItem()->text();
    studentList->clear();
    gradeBtn->setEnabled(false);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
    if (cls == "1A") {
        studentList->addItem("–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω");
        studentList->addItem("–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä");
        studentList->addItem("–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥–æ—Ä");
        studentList->addItem("–ö–æ–∑–ª–æ–≤–∞ –ê–Ω–Ω–∞");
    } else if (cls == "1B") {
        studentList->addItem("–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞");
        studentList->addItem("–û–ª—å–≥–∞ –í–æ–ª–∫–æ–≤–∞");
        studentList->addItem("–ú–∞—Ä–∏—è –ù–æ–≤–∏–∫–æ–≤–∞");
    } else if (cls == "2A") {
        studentList->addItem("–ê–ª–µ–∫—Å–µ–π –ú–æ—Ä–æ–∑–æ–≤");
        studentList->addItem("–î–º–∏—Ç—Ä–∏–π –õ–µ–±–µ–¥–µ–≤");
        studentList->addItem("–ï–ª–µ–Ω–∞ –°–æ–∫–æ–ª–æ–≤–∞");
    } else if (cls == "2B") {
        studentList->addItem("–ù–∏–∫–æ–ª–∞–π –ü–æ–ø–æ–≤");
        studentList->addItem("–¢–∞—Ç—å—è–Ω–∞ –§–µ–¥–æ—Ä–æ–≤–∞");
    } else if (cls == "3A") {
        studentList->addItem("–ê–Ω–¥—Ä–µ–π –ú–æ—Ä–æ–∑–æ–≤");
        studentList->addItem("–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –í–æ–ª–∫–æ–≤–∞");
        studentList->addItem("–°–µ—Ä–≥–µ–π –ù–æ–≤–∏–∫–æ–≤");
    } else if (cls == "3B") {
        studentList->addItem("–ù–∞—Ç–∞–ª—å—è –°–æ–∫–æ–ª–æ–≤–∞");
        studentList->addItem("–í–ª–∞–¥–∏–º–∏—Ä –õ–µ–±–µ–¥–µ–≤");
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
    loadGradesForClass(cls);
}

void TeacherView::loadGradesForClass(const QString &className) {
    gradesTable->setRowCount(0);
    
    DataStore ds;
    auto grades = ds.loadGrades();
    
    for (const QString &gradeLine : grades) {
        QStringList parts = gradeLine.split(',');
        if (parts.size() >= 5 && parts[0] == className) {
            int row = gradesTable->rowCount();
            gradesTable->insertRow(row);
            
            gradesTable->setItem(row, 0, new QTableWidgetItem(parts[1])); // –°—Ç—É–¥–µ–Ω—Ç
            gradesTable->setItem(row, 1, new QTableWidgetItem(parts[2])); // –ü—Ä–µ–¥–º–µ—Ç
            gradesTable->setItem(row, 2, new QTableWidgetItem(parts[4])); // –û—Ü–µ–Ω–∫–∞
            gradesTable->setItem(row, 3, new QTableWidgetItem(parts[3])); // –î–∞—Ç–∞
            
            QPushButton *editBtn = new QPushButton("‚úèÔ∏è");
            editBtn->setStyleSheet("QPushButton { background-color: #FF9800; color: white; border: none; padding: 5px; border-radius: 3px; }");
            gradesTable->setCellWidget(row, 4, editBtn);
        }
    }
}

void TeacherView::onStudentClicked() {
    if (!classList->currentItem()) return;
    
    QString cls = classList->currentItem()->text();
    QString student;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É
    if (studentList->currentItem() && studentList->currentItem()->text() != "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤") {
        student = studentList->currentItem()->text();
    } else {
        // –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        QMessageBox::information(this, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞");
        return;
    }

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–ª—è –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏
    MarkDialog dlg(cls, student, this);
    if (dlg.exec() == QDialog::Accepted) {
        QString subject = dlg.subject();
        QString grade = dlg.grade();
        DataStore ds;
        ds.addGrade(cls, student, subject, QDate::currentDate().toString(Qt::ISODate), grade);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –æ—Ü–µ–Ω–æ–∫
        loadGradesForClass(cls);
        
        QMessageBox::information(this, "‚úÖ –£—Å–ø–µ—à–Ω–æ", 
            QString("–ü–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ <b>%1</b> —É—á–µ–Ω–∏–∫—É <b>%2</b> –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É <b>%3</b>")
            .arg(grade, student, subject));
    }
}

void TeacherView::onLogout() {
    close();
}
