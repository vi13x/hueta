#include "teacherview.h"
#include "markdialog.h"
#include "datastore.h"
#include <QVBoxLayout>
#include <QHBoxLayout>
#include <QLabel>
#include <QListWidget>
#include <QMessageBox>
#include <QPushButton>
#include <QDate>
#include <QFrame>
#include <QTableWidget>
#include <QTableWidgetItem>
#include <QHeaderView>
#include <QSplitter>
TeacherView::TeacherView(const QString &username, QWidget *parent) : QWidget(parent), username(username) {
    setWindowTitle(QString("üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å: %1").arg(username));
    resize(1200, 800);
    setMinimumSize(1000, 700);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—Ä—É—Ç–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
    setStyleSheet(
        "QWidget { background-color: #1a1a1a; color: white; } "
        "QListWidget { background-color: #2a2a2a; border: 2px solid #404040; } "
        "QListWidget::item { padding: 12px; border-bottom: 1px solid #404040; font-weight: bold; } "
        "QListWidget::item:selected { background-color: #505050; } "
        "QListWidget::item:hover { background-color: #404040; } "
        "QTableWidget { background-color: #2a2a2a; gridline-color: #404040; border: 1px solid #404040; } "
        "QTableWidget::item { padding: 10px; border-bottom: 1px solid #404040; } "
        "QTableWidget::item:selected { background-color: #505050; } "
        "QHeaderView::section { background-color: #404040; color: white; padding: 12px; border: 1px solid #606060; font-weight: bold; } "
        "QPushButton { background-color: #404040; color: white; border: 2px solid #606060; padding: 12px 24px; font-weight: bold; letter-spacing: 1px; } "
        "QPushButton:hover { background-color: #505050; border: 2px solid #707070; } "
        "QPushButton:pressed { background-color: #303030; border: 2px solid #505050; } "
        "QPushButton#gradeBtn { background-color: #505050; border: 2px solid #707070; } "
        "QPushButton#gradeBtn:hover { background-color: #606060; border: 2px solid #808080; } "
    );

    QVBoxLayout *mainLayout = new QVBoxLayout(this);
    mainLayout->setSpacing(20);
    mainLayout->setContentsMargins(20, 20, 20, 20);

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –±—Ä—É—Ç–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ
    QFrame *headerFrame = new QFrame(this);
    headerFrame->setStyleSheet("QFrame { background-color: #1a1a1a; border: 2px solid #404040; padding: 15px; }");
    
    QHBoxLayout *headerLayout = new QHBoxLayout(headerFrame);
    QLabel *userLbl = new QLabel(QString("–£–ß–ò–¢–ï–õ–¨: %1").arg(username.toUpper()), this);
    userLbl->setStyleSheet("QLabel { color: white; font-size: 24px; font-weight: bold; letter-spacing: 2px; }");
    headerLayout->addWidget(userLbl);
    headerLayout->addStretch();
    
    QLabel *dateLabel = new QLabel(QDate::currentDate().toString("dd.MM.yyyy"), this);
    dateLabel->setStyleSheet("QLabel { color: #b0b0b0; font-size: 16px; font-weight: bold; }");
    headerLayout->addWidget(dateLabel);
    
    mainLayout->addWidget(headerFrame);

    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    QSplitter *mainSplitter = new QSplitter(Qt::Horizontal, this);
    
    // –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –∫–ª–∞—Å—Å—ã –∏ —Å—Ç—É–¥–µ–Ω—Ç—ã
    QWidget *leftPanel = new QWidget();
    QVBoxLayout *leftLayout = new QVBoxLayout(leftPanel);
    
    QLabel *classesLabel = new QLabel("–ö–õ–ê–°–°–´:", this);
    classesLabel->setStyleSheet("QLabel { font-size: 16px; font-weight: bold; margin: 10px 0; letter-spacing: 1px; }");
    leftLayout->addWidget(classesLabel);
    
    classList = new QListWidget(this);
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª–∞—Å—Å—ã –∏–∑ DataStore
    DataStore ds;
    auto classes = ds.getClasses();
    for (const QString &cls : classes) {
        classList->addItem(cls);
    }
    leftLayout->addWidget(classList);
    
    QLabel *studentsLabel = new QLabel("–°–¢–£–î–ï–ù–¢–´:", this);
    studentsLabel->setStyleSheet("QLabel { font-size: 16px; font-weight: bold; margin: 10px 0; letter-spacing: 1px; }");
    leftLayout->addWidget(studentsLabel);
    
    studentList = new QListWidget(this);
    studentList->addItem("–í–´–ë–ï–†–ò–¢–ï –ö–õ–ê–°–° –î–õ–Ø –ü–†–û–°–ú–û–¢–†–ê –°–¢–£–î–ï–ù–¢–û–í");
    leftLayout->addWidget(studentList);
    
    QPushButton *gradeBtn = new QPushButton("–ü–û–°–¢–ê–í–ò–¢–¨ –û–¶–ï–ù–ö–£", this);
    gradeBtn->setObjectName("gradeBtn");
    gradeBtn->setEnabled(false);
    leftLayout->addWidget(gradeBtn);
    
    mainSplitter->addWidget(leftPanel);
    
    // –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ç–∞–±–ª–∏—Ü–∞ –æ—Ü–µ–Ω–æ–∫
    QWidget *rightPanel = new QWidget();
    QVBoxLayout *rightLayout = new QVBoxLayout(rightPanel);
    
    QLabel *gradesLabel = new QLabel("–û–¶–ï–ù–ö–ò –ö–õ–ê–°–°–ê:", this);
    gradesLabel->setStyleSheet("QLabel { font-size: 16px; font-weight: bold; margin: 10px 0; letter-spacing: 1px; }");
    rightLayout->addWidget(gradesLabel);
    
    gradesTable = new QTableWidget(0, 5, this);
    gradesTable->setHorizontalHeaderLabels(QStringList() << "–°–¢–£–î–ï–ù–¢" << "–ü–†–ï–î–ú–ï–¢" << "–û–¶–ï–ù–ö–ê" << "–î–ê–¢–ê" << "–î–ï–ô–°–¢–í–ò–Ø");
    gradesTable->verticalHeader()->setVisible(false);
    gradesTable->horizontalHeader()->setStretchLastSection(true);
    gradesTable->setAlternatingRowColors(true);
    gradesTable->setSelectionBehavior(QAbstractItemView::SelectRows);
    rightLayout->addWidget(gradesTable);
    
    mainSplitter->addWidget(rightPanel);
    mainSplitter->setSizes({400, 800});
    
    mainLayout->addWidget(mainSplitter);

    // –ö–Ω–æ–ø–∫–∏ –≤ –±—Ä—É—Ç–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ
    QHBoxLayout *buttonsLayout = new QHBoxLayout();
    logoutBtn = new QPushButton("–í–´–ô–¢–ò", this);
    buttonsLayout->addStretch();
    buttonsLayout->addWidget(logoutBtn);
    mainLayout->addLayout(buttonsLayout);

    connect(classList, &QListWidget::itemClicked, this, &TeacherView::onClassSelected);
    connect(studentList, &QListWidget::itemClicked, this, &TeacherView::onStudentClicked);
    connect(gradeBtn, &QPushButton::clicked, this, &TeacherView::onStudentClicked);
    connect(logoutBtn, &QPushButton::clicked, this, &TeacherView::onLogout);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–ª–æ—Ç–∞—Ö
    this->gradeBtn = gradeBtn;
}

void TeacherView::onClassSelected() {
    QString cls = classList->currentItem()->text();
    studentList->clear();
    gradeBtn->setEnabled(false);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏–∑ DataStore
    DataStore ds;
    auto students = ds.getStudentsForClass(cls);
    for (const QString &student : students) {
        studentList->addItem(student);
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
    loadGradesForClass(cls);
}

void TeacherView::loadGradesForClass(const QString &className) {
    gradesTable->setRowCount(0);
    
    DataStore ds;
    auto grades = ds.loadGrades();
    
    for (const QString &gradeLine : grades) {
        QStringList parts = gradeLine.split(',');
        if (parts.size() >= 5 && parts[0] == className) {
            int row = gradesTable->rowCount();
            gradesTable->insertRow(row);
            
            gradesTable->setItem(row, 0, new QTableWidgetItem(parts[1])); // –°—Ç—É–¥–µ–Ω—Ç
            gradesTable->setItem(row, 1, new QTableWidgetItem(parts[2])); // –ü—Ä–µ–¥–º–µ—Ç
            gradesTable->setItem(row, 2, new QTableWidgetItem(parts[4])); // –û—Ü–µ–Ω–∫–∞
            gradesTable->setItem(row, 3, new QTableWidgetItem(parts[3])); // –î–∞—Ç–∞
            
            QPushButton *editBtn = new QPushButton("–†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨");
            editBtn->setStyleSheet("QPushButton { background-color: #505050; color: white; border: 1px solid #707070; padding: 5px; font-weight: bold; }");
            gradesTable->setCellWidget(row, 4, editBtn);
        }
    }
}

void TeacherView::onStudentClicked() {
    if (!classList->currentItem()) return;
    
    QString cls = classList->currentItem()->text();
    QString student;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–ª–∏ –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É
    if (studentList->currentItem() && studentList->currentItem()->text() != "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤") {
        student = studentList->currentItem()->text();
    } else {
        // –ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        QMessageBox::information(this, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞");
        return;
    }

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–ª—è –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏
    MarkDialog dlg(cls, student, this);
    if (dlg.exec() == QDialog::Accepted) {
        QString subject = dlg.subject();
        QString grade = dlg.grade();
        DataStore ds;
        ds.addGrade(cls, student, subject, QDate::currentDate().toString(Qt::ISODate), grade);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –æ—Ü–µ–Ω–æ–∫
        loadGradesForClass(cls);
        
        QMessageBox::information(this, "‚úÖ –£—Å–ø–µ—à–Ω–æ", 
            QString("–ü–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ <b>%1</b> —É—á–µ–Ω–∏–∫—É <b>%2</b> –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É <b>%3</b>")
            .arg(grade, student, subject));
    }
}

void TeacherView::onLogout() {
    close();
}
